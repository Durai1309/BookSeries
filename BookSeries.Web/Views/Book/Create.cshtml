@model BookSeries.Domain.Entities.Book

@{
    ViewData["Title"] = "Create Book";
}

<h1>Create New Book</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Author"></label>
        <input asp-for="Author" class="form-control" />
        <span asp-validation-for="Author" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="BookSeriesId"></label>
        <select asp-for="BookSeriesId" class="form-control">
            @if (ViewData["BookSeries"] != null)
            {
                var bookSeries = ViewData["BookSeries"] as List<BookSeries.Domain.Entities.BookCollection>;
                if (bookSeries != null && bookSeries.Any())
                {
                    foreach (var series in bookSeries)
                    {
                        <option value="@series.Id">@series.Title</option>
                    }
                }
                else
                {
                    <option>No book series available</option>
                }
            }
        </select>
        <span asp-validation-for="BookSeriesId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Order"></label>
        <input asp-for="Order" class="form-control" />
        <span asp-validation-for="Order" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
    <a href="@Url.Action("Index", "Book")" class="btn btn-secondary">Cancel</a>
</form>